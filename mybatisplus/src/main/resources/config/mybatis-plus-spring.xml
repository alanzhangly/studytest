<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context-3.0.xsd
          http://www.springframework.org/schema/aop
          http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
          http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd ">

    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
        <!-- 配置数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描 Xml 文件位置 -->
        <property name="mapperLocations" value="classpath*:com/alan/**/mapper/*.xml"/>
        <!-- 配置 Mybatis 配置文件（可无） -->
        <!-- <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/> -->
        <!-- 配置包别名 -->
        <property name="typeAliasesPackage"  value="com.baomidou.springmvc.model"/>

        <!-- 以上配置和传统 Mybatis 一致 -->

        <!-- 插件配置 -->
        <property name="plugins">
            <array>
                <!-- 分页插件配置, 参考文档分页插件部分！！ -->
                <!-- 如需要开启其他插件，可配置于此 -->
            </array>
        </property>

        <!-- MP 全局配置注入 -->
        <property name="globalConfig" ref="globalConfig"/>
    </bean>

    <!-- 定义 MP 全局策略 -->
    <bean id="globalConfig" class="com.baomidou.mybatisplus.entity.GlobalConfiguration">
        <!-- 逻辑删除 定义下面3个参数-->
        <!--<property name="sqlInjector" ref="logicSqlInjector" />-->
        <!--<property name="logicDeleteValue" value="-1" />-->
        <!--<property name="logicNotDeleteValue" value="1" />-->
        <!-- 全局ID类型： 0, "数据库ID自增"， 1, "用户输入ID", 2, "全局唯一ID", 3, "全局唯一ID"-->
        <property name="idType" value="2" />
        <!-- 2.1-gamma 数据库自动识别，无需配置数据库类型
        <property name="dbType" value="mysql" />
        -->
        <!--主键Sequence-->
        <!--<property name="keyGenerator" ref="keyGenerator"/>-->
        <!-- 公共字段填充处理器 -->
        <!--<property name="metaObjectHandler" ref="myMetaObjectHandler" />-->
        <!--数据库关键字转义符，'desc', "desc" -->
        <!--<property name="identifierQuote" value="'" />-->
    </bean>

    <!-- 配置oracle主键Sequence， 其他类型数据库，请配置相应的类型-->
    <todobean id="keyGenerator" class="com.baomidou.mybatisplus.incrementer.OracleKeyGenerator"/>-->
    <todobean id="keyGenerator" class="com.baomidou.mybatisplus.incrementer.OracleKeyGenerator"/>-->

    <!-- 自定义处理器 -->
    <todobean id="myMetaObjectHandler" class="com.baomidou.test.MyMetaObjectHandler" />-->

    <!-- 数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${spring.datasource.url}"/>
        <property name="username" value="${spring.datasource.username}"/>
        <property name="password" value="${spring.datasource.password}"/>
        <!--
        <property name="connectionProperties" value="${spring.datasource.connectionProperties}"/>
         -->
        <property name="initialSize" value="${spring.datasource.initialSize}"/>
        <property name="minIdle" value="${spring.datasource.minIdle}"/>
        <property name="maxActive" value="${spring.datasource.maxActive}"/>
        <property name="maxWait" value="${spring.datasource.maxWait}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${spring.datasource.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${spring.datasource.minEvictableIdleTimeMillis}"/>
        <property name="poolPreparedStatements" value="${spring.datasource.poolPreparedStatements}"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="${spring.datasource.maxPoolPreparedStatementPerConnectionSize}"/>
        <property name="filters" value="${spring.datasource.filters}"/>
    </bean>

</beans>